# Generated by Django 4.1.7 on 2023-04-05 07:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('metadata', models.JSONField(blank=True, help_text='Metadata', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment_id', models.AutoField(help_text='The chat ID UUID for an instance of a issue.', primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['-created_at', '-updated_at', '-metadata'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('metadata', models.JSONField(blank=True, help_text='Metadata', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community_id', models.AutoField(help_text='The tenant community ID UUID .', primary_key=True, serialize=False)),
                ('community_name', models.CharField(help_text='Display name of the community', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the community', max_length=255, null=True)),
            ],
            options={
                'ordering': ['-created_at', '-updated_at', '-metadata'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Join', 'join'), ('Left', 'left')], max_length=10)),
                ('description', models.CharField(editable=False, help_text='A description of the event that occurred', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('metadata', models.JSONField(blank=True, help_text='Metadata', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issue_id', models.AutoField(help_text='The issue ID UUID .', primary_key=True, serialize=False)),
                ('issue', models.CharField(help_text="Display name of the issue that's created", max_length=100)),
                ('description', models.TextField(help_text='Description of the issue', max_length=255)),
                ('solved', models.BooleanField(default=False, help_text='Was the issue solved or not')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at', '-metadata'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('metadata', models.JSONField(blank=True, help_text='Metadata', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thread_id', models.AutoField(help_text='The thread ID UUID for an instance of a thread.', primary_key=True, serialize=False)),
                ('issue', models.OneToOneField(help_text='Display name of the issue that this thread belongs to', on_delete=django.db.models.deletion.CASCADE, to='core_engine_community_app.issue')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at', '-metadata'],
                'abstract': False,
            },
        ),
    ]
